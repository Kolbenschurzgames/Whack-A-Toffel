buildscript {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'

def AAVersion = '4.2.0'

dependencies {
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
}

apt {
    arguments {
        resourcePackageName android.defaultConfig.applicationId
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
    }
}

android {
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "de.kolbenschurzgames.whack_a_toffel.app"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }

    lintOptions {
        abortOnError false
    }
}

def PowerMockVersion = '1.6.4'
def SupportVersion = '22.2.1'
def VolleyVersion = '1.0.0'
def MockitoVersion = '1.10.19'
def RobolectricVersion = '3.0'
def JUnitVersion = '4.12'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // You must install or update the Support Repository through the SDK manager in order to use this dependency.
    compile "com.android.support:support-v4:$SupportVersion"

    compile "com.android.volley:volley:$VolleyVersion"

    testCompile "org.mockito:mockito-core:$MockitoVersion"

    testCompile "org.powermock:powermock-module-junit4:$PowerMockVersion"
    testCompile "org.powermock:powermock-module-junit4-rule:$PowerMockVersion"
    testCompile "org.powermock:powermock-api-mockito:$PowerMockVersion"
    testCompile "org.powermock:powermock-classloading-xstream:$PowerMockVersion"

    testCompile "junit:junit:$JUnitVersion"

    testCompile "org.robolectric:robolectric:$RobolectricVersion"
}

android.testOptions.unitTests.all {
    // Configure includes / excludes
    include '**/*Test.class'

    // configure whether failing tests should fail the build
    ignoreFailures false

    // use afterTest to listen to the test execution results
    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}